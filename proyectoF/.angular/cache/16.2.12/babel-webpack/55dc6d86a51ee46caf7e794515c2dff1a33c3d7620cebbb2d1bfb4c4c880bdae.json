{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/services/event.service\";\nimport * as i5 from \"src/app/services/disciplina.service\";\nclass CrearEventComponent {\n  constructor(fb, router, toastr, eventService, disciplinaService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.eventService = eventService;\n    this.disciplinaService = disciplinaService;\n    this.aRouter = aRouter;\n    this.titulo = 'Crear Evento';\n    this.eventForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endingDate: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const event = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline: this.competitorForm.get('discipline')?.value,\n      stakes: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor, this.competitorForm.get('discipline')?.value);\n    }\n  }\n  guardarCompetitor(competitor, id) {\n    this.competitorService.saveCompetitor(competitor, id).subscribe(data => {\n      this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  actualizarCompetitor(competitor) {\n    this.competitorService.update(this.id, competitor).subscribe(response => {\n      console.log(response);\n      this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      this.competitorService.getCompetitorById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.competitorForm.setValue({\n          id: data.id,\n          name: data.name,\n          surName: data.surName,\n          birthdate: data.birthdate,\n          discipline: data.discipline\n        });\n        this.competitorForm.get('id')?.disable();\n        this.competitorForm.get('discipline')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CrearEventComponent_Factory(t) {\n    return new (t || CrearEventComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.EventService), i0.ɵɵdirectiveInject(i5.DisciplinaService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrearEventComponent,\n    selectors: [[\"app-crear-event\"]],\n    decls: 2,\n    vars: 0,\n    template: function CrearEventComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"crear-event works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CrearEventComponent };","map":{"version":3,"names":["Validators","CrearEventComponent","constructor","fb","router","toastr","eventService","disciplinaService","aRouter","titulo","eventForm","group","id","required","name","startDate","endingDate","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","event","competitorForm","value","surName","birthdate","discipline","stakes","actualizarCompetitor","competitor","guardarCompetitor","competitorService","saveCompetitor","subscribe","data","success","navigate","error","console","log","reset","update","response","getCompetitorById","setValue","disable","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","ToastrService","i4","EventService","i5","DisciplinaService","ActivatedRoute","_2","selectors","decls","vars","template","CrearEventComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-event\\crear-event.component.ts","C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-event\\crear-event.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Event} from 'src/app/models/Event';\nimport { Disciplina} from 'src/app/models/Disciplina';\nimport { EventService } from 'src/app/services/event.service';\nimport { DisciplinaService } from 'src/app/services/disciplina.service';\n\n@Component({\n  selector: 'app-crear-event',\n  templateUrl: './crear-event.component.html',\n  styleUrls: ['./crear-event.component.css']\n})\nexport class CrearEventComponent {\n  eventForm: FormGroup;\n  titulo = 'Crear Evento';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private eventService:EventService,\n              private disciplinaService:DisciplinaService,\n              private aRouter: ActivatedRoute) { \n    this.eventForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endingDate: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const event:Event = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline:this.competitorForm.get('discipline')?.value,\n     stakes:[]\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor,this.competitorForm.get('discipline')?.value);\n    }\n  }\n  guardarCompetitor(competitor: Competitor,id:String) {\n    this.competitorService.saveCompetitor(competitor,id).subscribe(\n      data => {\n        this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  private actualizarCompetitor(competitor: Competitor) {\n    this.competitorService.update(this.id!, competitor).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      \n      this.competitorService.getCompetitorById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.competitorForm.setValue({\n            id:data.id,\n            name: data.name,\n            surName: data.surName,\n            birthdate:data.birthdate,\n            discipline:data.discipline\n          });\n          this.competitorForm.get('id')?.disable();\n          this.competitorForm.get('discipline')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n \n\n\n}\n","<p>crear-event works!</p>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}