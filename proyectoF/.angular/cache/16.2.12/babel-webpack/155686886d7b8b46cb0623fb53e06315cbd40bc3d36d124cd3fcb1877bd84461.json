{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CompetitorService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:2500/competitor/';\n  }\n  getCompetitorByIdO(id) {\n    return this.http.get(this.url + 'findBO/' + id);\n  }\n  getCompetitor() {\n    return this.http.get(this.url);\n  }\n  eliminarCompetitor(id) {\n    return this.http.delete(this.url + id);\n  }\n  saveCompetitor(competitor, id) {\n    return this.http.post(this.url + id, competitor);\n  }\n  getCompetitorById(id) {\n    return this.http.get(this.url + id);\n  }\n  update(id, competitor) {\n    return this.http.put(this.url + id, competitor);\n  }\n  static #_ = this.ɵfac = function CompetitorService_Factory(t) {\n    return new (t || CompetitorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompetitorService,\n    factory: CompetitorService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CompetitorService };","map":{"version":3,"names":["CompetitorService","constructor","http","url","getCompetitorByIdO","id","get","getCompetitor","eliminarCompetitor","delete","saveCompetitor","competitor","post","getCompetitorById","update","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem6\\Metodos\\proyecto\\ProyectoMetodos\\proyectoF\\src\\app\\services\\competitor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Competitor} from 'src/app/models/Competitor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetitorService {\n  private url='http://localhost:2500/competitor/'\n\n  constructor(private http:HttpClient) { }\n  getCompetitorByIdO(id: string): Observable<any> {\n    return this.http.get(this.url + 'findBO/' + id);\n}\ngetCompetitor():Observable<any>{\n  return this.http.get(this.url);\n}\neliminarCompetitor(id: string): Observable<any> {\nreturn this.http.delete(this.url + id);\n}\n\nsaveCompetitor(competitor:Competitor,id:String): Observable<any> {\nreturn this.http.post(this.url+id, competitor);\n}\n\ngetCompetitorById(id: string): Observable<any> {\nreturn this.http.get(this.url + id);\n}\nupdate(id:string,competitor:Competitor):Observable<any>{\nreturn this.http.put(this.url+id,competitor);\n}\n}\n"],"mappings":";;AAKA,MAGaA,iBAAiB;EAG5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAC,mCAAmC;EAER;EACvCC,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAG,SAAS,GAAGE,EAAE,CAAC;EACnD;EACAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,CAAC;EAChC;EACAK,kBAAkBA,CAACH,EAAU;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACO,MAAM,CAAC,IAAI,CAACN,GAAG,GAAGE,EAAE,CAAC;EACtC;EAEAK,cAAcA,CAACC,UAAqB,EAACN,EAAS;IAC9C,OAAO,IAAI,CAACH,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,GAAG,GAACE,EAAE,EAAEM,UAAU,CAAC;EAC9C;EAEAE,iBAAiBA,CAACR,EAAU;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAGE,EAAE,CAAC;EACnC;EACAS,MAAMA,CAACT,EAAS,EAACM,UAAqB;IACtC,OAAO,IAAI,CAACT,IAAI,CAACa,GAAG,CAAC,IAAI,CAACZ,GAAG,GAACE,EAAE,EAACM,UAAU,CAAC;EAC5C;EAAC,QAAAK,CAAA,G;qBAvBYhB,iBAAiB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBrB,iBAAiB;IAAAsB,OAAA,EAAjBtB,iBAAiB,CAAAuB,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPxB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}