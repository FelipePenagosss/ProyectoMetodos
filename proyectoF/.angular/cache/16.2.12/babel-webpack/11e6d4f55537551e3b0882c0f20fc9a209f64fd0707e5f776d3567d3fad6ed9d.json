{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearEventComponent = class CrearEventComponent {\n  constructor(fb, router, toastr, eventService, disciplinaService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.eventService = eventService;\n    this.disciplinaService = disciplinaService;\n    this.aRouter = aRouter;\n    this.titulo = 'Crear Evento';\n    this.eventForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endingDate: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const event = {\n      id: this.eventForm.get('id')?.value,\n      name: this.eventForm.get('name')?.value,\n      startDate: this.eventForm.get('startDate')?.value,\n      endingDate: this.eventForm.get('endingDate')?.value,\n      stakes: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarEvent(event);\n    } else {\n      // Modo de creación\n      this.guardarEvent(event);\n    }\n  }\n  guardarEvent(event) {\n    this.eventService.saveEvent(event).subscribe(data => {\n      this.toastr.success('El Evento fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarEvent']);\n    }, error => {\n      console.log(error);\n      this.eventForm.reset();\n    });\n  }\n  actualizarEvent(event) {\n    this.eventService.update(this.id, event).subscribe(response => {\n      console.log(response);\n      this.toastr.success('El evento fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarEvent']);\n    }, error => {\n      console.log(error);\n      this.eventForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar evento';\n      this.eventService.getEventById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.eventForm.setValue({\n          id: data.id,\n          name: data.name,\n          startDate: data.startDate,\n          endingDate: data.endingDate\n        });\n        this.eventForm.get('id')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n};\nCrearEventComponent = __decorate([Component({\n  selector: 'app-crear-event',\n  templateUrl: './crear-event.component.html',\n  styleUrls: ['./crear-event.component.css']\n})], CrearEventComponent);\nexport { CrearEventComponent };","map":{"version":3,"names":["Component","Validators","CrearEventComponent","constructor","fb","router","toastr","eventService","disciplinaService","aRouter","titulo","eventForm","group","id","required","name","startDate","endingDate","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","event","value","stakes","actualizarEvent","guardarEvent","saveEvent","subscribe","data","success","navigate","error","console","log","reset","update","response","getEventById","setValue","disable","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-event\\crear-event.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Event} from 'src/app/models/Event';\nimport { Disciplina} from 'src/app/models/Disciplina';\nimport { EventService } from 'src/app/services/event.service';\nimport { DisciplinaService } from 'src/app/services/disciplina.service';\n\n@Component({\n  selector: 'app-crear-event',\n  templateUrl: './crear-event.component.html',\n  styleUrls: ['./crear-event.component.css']\n})\nexport class CrearEventComponent {\n  eventForm: FormGroup;\n  titulo = 'Crear Evento';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private eventService:EventService,\n              private disciplinaService:DisciplinaService,\n              private aRouter: ActivatedRoute) { \n    this.eventForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endingDate: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const event:Event = {\n      id: this.eventForm.get('id')?.value,\n      name: this.eventForm.get('name')?.value,\n      startDate: this.eventForm.get('startDate')?.value,\n      endingDate: this.eventForm.get('endingDate')?.value,\n     stakes:[]\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarEvent(event);\n    } else {\n      // Modo de creación\n      this.guardarEvent(event);\n    }\n  }\n  guardarEvent(event:Event) {\n    this.eventService.saveEvent(event).subscribe(\n      data => {\n        this.toastr.success('El Evento fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarEvent']);\n      },\n      error => {\n        console.log(error);\n        this.eventForm.reset();\n      }\n    );\n  }\n  private actualizarEvent(event: Event) {\n    this.eventService.update(this.id!, event).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('El evento fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarEvent']);\n      },\n      error => {\n        console.log(error);\n        this.eventForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar evento';\n      \n      this.eventService.getEventById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.eventForm.setValue({\n            id:data.id,\n            name: data.name,\n            startDate: data.startDate,\n            endingDate:data.endingDate\n          });\n          this.eventForm.get('id')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n \n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}