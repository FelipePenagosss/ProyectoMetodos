{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/services/competitor.service\";\nclass CrearCompetidorComponent {\n  constructor(fb, router, toastr, competitorService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.competitorService = competitorService;\n    this.aRouter = aRouter;\n    this.titulo = 'Crear Competidor';\n    this.competitorForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline: this.competitorForm.get('discipline')?.value,\n      stakes: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor);\n    }\n  }\n  guardarCompetitor(competitor, id) {\n    this.competitorService.saveCompetitor(disciplina).subscribe(data => {\n      this.toastr.success('El producto fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarDiscipline']);\n    }, error => {\n      console.log(error);\n      this.disciplineForm.reset();\n    });\n  }\n  actualizarDisciplina(disciplina) {\n    this.disciplinaService.update(this.id, disciplina).subscribe(response => {\n      console.log(response);\n      this.toastr.success('La disciplina fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarDiscipline']);\n    }, error => {\n      console.log(error);\n      this.disciplineForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar disciplina';\n      this.disciplinaService.getDisciplineById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.disciplineForm.setValue({\n          id: data.id,\n          name: data.name,\n          description: data.description,\n          group: data.group\n        });\n        this.disciplineForm.get('id')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CrearCompetidorComponent_Factory(t) {\n    return new (t || CrearCompetidorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.CompetitorService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrearCompetidorComponent,\n    selectors: [[\"app-crear-competidor\"]],\n    decls: 2,\n    vars: 0,\n    template: function CrearCompetidorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"crear-competidor works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CrearCompetidorComponent };","map":{"version":3,"names":["Validators","CrearCompetidorComponent","constructor","fb","router","toastr","competitorService","aRouter","titulo","competitorForm","group","id","required","name","surName","birthdate","discipline","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","competitor","value","stakes","actualizarCompetitor","guardarCompetitor","saveCompetitor","disciplina","subscribe","data","success","navigate","error","console","log","disciplineForm","reset","actualizarDisciplina","disciplinaService","update","response","getDisciplineById","setValue","description","disable","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","ToastrService","i4","CompetitorService","ActivatedRoute","_2","selectors","decls","vars","template","CrearCompetidorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-competidor\\crear-competidor.component.ts","C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-competidor\\crear-competidor.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Competitor} from 'src/app/models/Competitor';\nimport { CompetitorService } from 'src/app/services/competitor.service';\n\n@Component({\n  selector: 'app-crear-competidor',\n  templateUrl: './crear-competidor.component.html',\n  styleUrls: ['./crear-competidor.component.css']\n})\nexport class CrearCompetidorComponent {\n  competitorForm: FormGroup;\n  titulo = 'Crear Competidor';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private competitorService:CompetitorService,\n              private aRouter: ActivatedRoute) { \n    this.competitorForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor:Competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline:this.competitorForm.get('discipline')?.value,\n     stakes:[]\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor);\n    }\n  }\n  guardarCompetitor(competitor: Competitor,id:String) {\n    this.competitorService.saveCompetitor(disciplina).subscribe(\n      data => {\n        this.toastr.success('El producto fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarDiscipline']);\n      },\n      error => {\n        console.log(error);\n        this.disciplineForm.reset();\n      }\n    );\n  }\n  private actualizarDisciplina(disciplina: Disciplina) {\n    this.disciplinaService.update(this.id!, disciplina).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('La disciplina fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarDiscipline']);\n      },\n      error => {\n        console.log(error);\n        this.disciplineForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar disciplina';\n      \n      this.disciplinaService.getDisciplineById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.disciplineForm.setValue({\n            id:data.id,\n            name: data.name,\n            description: data.description,\n            group: data.group,\n          });\n          this.disciplineForm.get('id')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n\n}\n","<p>crear-competidor works!</p>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}