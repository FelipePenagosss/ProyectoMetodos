{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MostrarCompetidorComponent = class MostrarCompetidorComponent {\n  constructor(toastr, competitorService, disciplinaService) {\n    this.toastr = toastr;\n    this.competitorService = competitorService;\n    this.disciplinaService = disciplinaService;\n    this.listaCompetitor = [];\n  }\n  ngOnInit() {\n    this.obtenerCompetidores();\n  }\n  obtenerCompetidores() {\n    this.competitorService.getCompetitor().subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        this.listaCompetitor = data;\n        for (const iterator of this.listaCompetitor) {\n          console.log(iterator.name);\n        }\n      } else {\n        console.error('Los datos recibidos no son un array:', data);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  eliminarCompetidor(id) {\n    this.competitorService.eliminarCompetitor(id).subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      console.log('El producto fue eliminado con exito');\n      this.toastr.error('El producto fue eliminado con exito', 'Producto Eliminado');\n      this.obtenerCompetidores();\n    }, error => {\n      console.log(error);\n    });\n  }\n  buscar(id) {\n    let disciplinaNombre = '';\n    this.disciplinaService.getDisciplineByIdO(id).subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      disciplinaNombre = data.name;\n    }, error => {\n      console.log(error);\n    });\n    return disciplinaNombre;\n  }\n};\nMostrarCompetidorComponent = __decorate([Component({\n  selector: 'app-mostrar-competidor',\n  templateUrl: './mostrar-competidor.component.html',\n  styleUrls: ['./mostrar-competidor.component.css']\n})], MostrarCompetidorComponent);\nexport { MostrarCompetidorComponent };","map":{"version":3,"names":["Component","MostrarCompetidorComponent","constructor","toastr","competitorService","disciplinaService","listaCompetitor","ngOnInit","obtenerCompetidores","getCompetitor","subscribe","response","console","log","data","Array","isArray","iterator","name","error","eliminarCompetidor","id","eliminarCompetitor","buscar","disciplinaNombre","getDisciplineByIdO","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\mostrar-competidor\\mostrar-competidor.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Competitor} from 'src/app/models/Competitor';\nimport { ToastrService } from 'ngx-toastr';\nimport { DisciplinaService } from 'src/app/services/disciplina.service';\nimport { CompetitorService } from 'src/app/services/competitor.service';\n\n@Component({\n  selector: 'app-mostrar-competidor',\n  templateUrl: './mostrar-competidor.component.html',\n  styleUrls: ['./mostrar-competidor.component.css']\n})\nexport class MostrarCompetidorComponent {\n  listaCompetitor : Competitor[]=[];\n  constructor(private toastr: ToastrService,\n    private competitorService:CompetitorService,\n    private disciplinaService:D){\n\n  }\n  ngOnInit(){\nthis.obtenerCompetidores();\n  }\n  obtenerCompetidores() {\n    this.competitorService.getCompetitor().subscribe(\n      response => {\n        console.log(response);\n        const data = response.data;\n        if (Array.isArray(data)) {\n          this.listaCompetitor = data;\n          for (const iterator of this.listaCompetitor) {\n            console.log(iterator.name);\n          }\n        } else {\n          console.error('Los datos recibidos no son un array:', data);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n  eliminarCompetidor(id: any) {\n    this.competitorService.eliminarCompetitor(id).subscribe( response => {\n      console.log(response);\n        const data = response.data;\n      console.log('El producto fue eliminado con exito');\n        this.toastr.error('El producto fue eliminado con exito' ,'Producto Eliminado');\n        this.obtenerCompetidores();\n      \n    }, error => {\n      console.log(error);\n    })\n  }\n  buscar(id:string):string{\n    let disciplinaNombre: string = '';\n    this.disciplinaService.getDisciplineByIdO(id).subscribe(\n      response => {\n        console.log(response);\n        const data = response.data;\n      disciplinaNombre= data.name;\n      },\n      error => {\n        console.log(error);\n      });\n      return disciplinaNombre;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWzC,IAAaC,0BAA0B,GAAvC,MAAaA,0BAA0B;EAErCC,YAAoBC,MAAqB,EAC/BC,iBAAmC,EACnCC,iBAAmB;IAFT,KAAAF,MAAM,GAANA,MAAM;IAChB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAH3B,KAAAC,eAAe,GAAgB,EAAE;EAKjC;EACAC,QAAQA,CAAA;IACV,IAAI,CAACC,mBAAmB,EAAE;EACxB;EACAA,mBAAmBA,CAAA;IACjB,IAAI,CAACJ,iBAAiB,CAACK,aAAa,EAAE,CAACC,SAAS,CAC9CC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC1B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvB,IAAI,CAACR,eAAe,GAAGQ,IAAI;QAC3B,KAAK,MAAMG,QAAQ,IAAI,IAAI,CAACX,eAAe,EAAE;UAC3CM,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACC,IAAI,CAAC;;OAE7B,MAAM;QACLN,OAAO,CAACO,KAAK,CAAC,sCAAsC,EAAEL,IAAI,CAAC;;IAE/D,CAAC,EACDK,KAAK,IAAG;MACNP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EACAC,kBAAkBA,CAACC,EAAO;IACxB,IAAI,CAACjB,iBAAiB,CAACkB,kBAAkB,CAACD,EAAE,CAAC,CAACX,SAAS,CAAEC,QAAQ,IAAG;MAClEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACnB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC5BF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAChD,IAAI,CAACV,MAAM,CAACgB,KAAK,CAAC,qCAAqC,EAAE,oBAAoB,CAAC;MAC9E,IAAI,CAACX,mBAAmB,EAAE;IAE9B,CAAC,EAAEW,KAAK,IAAG;MACTP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EACAI,MAAMA,CAACF,EAAS;IACd,IAAIG,gBAAgB,GAAW,EAAE;IACjC,IAAI,CAACnB,iBAAiB,CAACoB,kBAAkB,CAACJ,EAAE,CAAC,CAACX,SAAS,CACrDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC5BU,gBAAgB,GAAEV,IAAI,CAACI,IAAI;IAC3B,CAAC,EACDC,KAAK,IAAG;MACNP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CAAC;IACF,OAAOK,gBAAgB;EAC3B;CACD;AAtDYvB,0BAA0B,GAAAyB,UAAA,EALtC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACW5B,0BAA0B,CAsDtC;SAtDYA,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}