{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CompetitorService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:2500/competitor/';\n  }\n  getCompetitorByIdO(id) {\n    return this.http.get(this.url + 'findBO/' + id);\n  }\n  static #_ = this.ɵfac = function CompetitorService_Factory(t) {\n    return new (t || CompetitorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompetitorService,\n    factory: CompetitorService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CompetitorService };","map":{"version":3,"names":["CompetitorService","constructor","http","url","getCompetitorByIdO","id","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\services\\competitor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Competitor} from 'src/app/models/Competitor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetitorService {\n  private url='http://localhost:2500/competitor/'\n\n  constructor(private http:HttpClient) { }\n  getCompetitorByIdO(id: string): Observable<{ state: boolean; data: Competitor[] }> {\n    return this.http.get<{ state: boolean; data: Competitor[] }>(this.url + 'findBO/' + id);\n}\n}\n"],"mappings":";;AAKA,MAGaA,iBAAiB;EAG5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAC,mCAAmC;EAER;EACvCC,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAyC,IAAI,CAACH,GAAG,GAAG,SAAS,GAAGE,EAAE,CAAC;EAC3F;EAAC,QAAAE,CAAA,G;qBANYP,iBAAiB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBZ,iBAAiB;IAAAa,OAAA,EAAjBb,iBAAiB,CAAAc,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}