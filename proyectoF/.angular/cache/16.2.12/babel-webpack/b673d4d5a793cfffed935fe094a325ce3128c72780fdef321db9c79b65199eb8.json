{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearStakeComponent = class CrearStakeComponent {\n  constructor(fb, router, toastr, competitorService, eventService, stakeService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.competitorService = competitorService;\n    this.eventService = eventService;\n    this.stakeService = stakeService;\n    this.aRouter = aRouter;\n    this.competidores = [];\n    this.eventos = [];\n    this.titulo = 'Crear Participacion';\n    this.competitorForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.obtenerDisciplinas();\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline: this.competitorForm.get('discipline')?.value,\n      stakes: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor, this.competitorForm.get('discipline')?.value);\n    }\n  }\n  guardarCompetitor(competitor, id) {\n    this.competitorService.saveCompetitor(competitor, id).subscribe(data => {\n      this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  actualizarCompetitor(competitor) {\n    this.competitorService.update(this.id, competitor).subscribe(response => {\n      console.log(response);\n      this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      this.competitorService.getCompetitorById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.competitorForm.setValue({\n          id: data.id,\n          name: data.name,\n          surName: data.surName,\n          birthdate: data.birthdate,\n          discipline: data.discipline\n        });\n        this.competitorForm.get('id')?.disable();\n        this.competitorForm.get('discipline')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  obtenerDisciplinas() {\n    this.disciplinaService.getDiscipline().subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        this.disciplinas = data;\n        for (const iterator of this.disciplinas) {\n          console.log(iterator.name);\n        }\n      } else {\n        console.error('Los datos recibidos no son un array:', data);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nCrearStakeComponent = __decorate([Component({\n  selector: 'app-crear-stake',\n  templateUrl: './crear-stake.component.html',\n  styleUrls: ['./crear-stake.component.css']\n})], CrearStakeComponent);\nexport { CrearStakeComponent };","map":{"version":3,"names":["Component","Validators","CrearStakeComponent","constructor","fb","router","toastr","competitorService","eventService","stakeService","aRouter","competidores","eventos","titulo","competitorForm","group","id","required","name","surName","birthdate","discipline","snapshot","paramMap","get","ngOnInit","obtenerDisciplinas","esEditar","agregarProducto","competitor","value","stakes","actualizarCompetitor","guardarCompetitor","saveCompetitor","subscribe","data","success","navigate","error","console","log","reset","update","response","getCompetitorById","setValue","disable","disciplinaService","getDiscipline","Array","isArray","disciplinas","iterator","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-stake\\crear-stake.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Competitor} from 'src/app/models/Competitor';\nimport { Event} from 'src/app/models/Event';\nimport {Stake} from 'src/app/models/Stake';\nimport { CompetitorService } from 'src/app/services/competitor.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { StakesService } from 'src/app/services/stakes.service';\n\n\n@Component({\n  selector: 'app-crear-stake',\n  templateUrl: './crear-stake.component.html',\n  styleUrls: ['./crear-stake.component.css']\n})\nexport class CrearStakeComponent {\n  competidores:Competitor[]=[];\n  eventos:Event[]=[];\n  competitorForm: FormGroup;\n  titulo = 'Crear Participacion';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private competitorService:CompetitorService,\n              private eventService:EventService,\n              private stakeService:S\n              private aRouter: ActivatedRoute) { \n    this.competitorForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.obtenerDisciplinas();\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor:Competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline:this.competitorForm.get('discipline')?.value,\n     stakes:[]\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor,this.competitorForm.get('discipline')?.value);\n    }\n  }\n  guardarCompetitor(competitor: Competitor,id:String) {\n    this.competitorService.saveCompetitor(competitor,id).subscribe(\n      data => {\n        this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  private actualizarCompetitor(competitor: Competitor) {\n    this.competitorService.update(this.id!, competitor).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      \n      this.competitorService.getCompetitorById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.competitorForm.setValue({\n            id:data.id,\n            name: data.name,\n            surName: data.surName,\n            birthdate:data.birthdate,\n            discipline:data.discipline\n          });\n          this.competitorForm.get('id')?.disable();\n          this.competitorForm.get('discipline')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n  obtenerDisciplinas() {\n    this.disciplinaService.getDiscipline().subscribe(\n      response => {\n        console.log(response);\n        const data = response.data;\n        if (Array.isArray(data)) {\n          this.disciplinas = data;\n          for (const iterator of this.disciplinas) {\n            console.log(iterator.name);\n          }\n        } else {\n          console.error('Los datos recibidos no son un array:', data);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}