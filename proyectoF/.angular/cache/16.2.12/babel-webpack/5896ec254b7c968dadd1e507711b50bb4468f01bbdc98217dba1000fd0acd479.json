{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/stakes.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/updateStake\", a1];\n};\nfunction MostrarStakeComponent_table_9_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"i\", 12);\n    i0.ɵɵelementStart(11, \"i\", 13);\n    i0.ɵɵlistener(\"click\", function MostrarStakeComponent_table_9_tr_14_Template_i_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const stake_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.eliminarStake(stake_r3.id));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const stake_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stake_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stake_r3.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stake_r3.competitor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stake_r3.event);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, stake_r3.id));\n  }\n}\nfunction MostrarStakeComponent_table_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"thead\")(2, \"tr\")(3, \"th\", 10);\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 10);\n    i0.ɵɵtext(6, \"position\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 10);\n    i0.ɵɵtext(8, \"competitor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 10);\n    i0.ɵɵtext(10, \"event\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 10);\n    i0.ɵɵtext(12, \"Acciones\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, MostrarStakeComponent_table_9_tr_14_Template, 12, 7, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.listaStake);\n  }\n}\nfunction MostrarStakeComponent_h5_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 14);\n    i0.ɵɵtext(1, \"No hay Participaciones para mostrar\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass MostrarStakeComponent {\n  constructor(toastr, stakeService) {\n    this.toastr = toastr;\n    this.stakeService = stakeService;\n    this.listaStake = [];\n  }\n  ngOnInit() {\n    this.obtenerStakes();\n  }\n  obtenerStakes() {\n    this.stakeService.getStake().subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        this.listaStake = data;\n        for (const iterator of this.listaStake) {}\n      } else {\n        console.error('Los datos recibidos no son un array:', data);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  eliminarStake(id) {\n    this.stakeService.eliminarStake(id).subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      console.log('El producto fue eliminado con exito');\n      this.toastr.error('El producto fue eliminado con exito', 'Producto Eliminado');\n      this.obtenerStakes();\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function MostrarStakeComponent_Factory(t) {\n    return new (t || MostrarStakeComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.StakesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MostrarStakeComponent,\n    selectors: [[\"app-mostrar-stake\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-lg-8\", \"offset-lg-2\"], [1, \"card\"], [1, \"card-body\", \"text-center\"], [1, \"titulo\"], [\"routerLink\", \"/saveStake\", 1, \"btn\", \"btn-success\", \"float-end\"], [\"class\", \"table table-striped mt-3\", 4, \"ngIf\"], [\"style\", \"text-align: start; margin-top: 10px;\", 4, \"ngIf\"], [1, \"table\", \"table-striped\", \"mt-3\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fas\", \"fa-edit\", \"text-primary\", 3, \"routerLink\"], [1, \"fas\", \"fa-trash\", \"text-danger\", 3, \"click\"], [2, \"text-align\", \"start\", \"margin-top\", \"10px\"]],\n    template: function MostrarStakeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \"LISTADO DE PARTICIPACIONES\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵtext(8, \"NUEVO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, MostrarStakeComponent_table_9_Template, 15, 1, \"table\", 7);\n        i0.ɵɵtemplate(10, MostrarStakeComponent_h5_10_Template, 2, 0, \"h5\", 8);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.listaDisciplina.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.listaStake.length == 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { MostrarStakeComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","MostrarStakeComponent_table_9_tr_14_Template_i_click_11_listener","restoredCtx","ɵɵrestoreView","_r5","stake_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","eliminarStake","id","ɵɵadvance","ɵɵtextInterpolate","position","competitor","event","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵtemplate","MostrarStakeComponent_table_9_tr_14_Template","ctx_r0","listaStake","MostrarStakeComponent","constructor","toastr","stakeService","ngOnInit","obtenerStakes","getStake","subscribe","response","console","log","data","Array","isArray","iterator","error","_","ɵɵdirectiveInject","i1","ToastrService","i2","StakesService","_2","selectors","decls","vars","consts","template","MostrarStakeComponent_Template","rf","ctx","MostrarStakeComponent_table_9_Template","MostrarStakeComponent_h5_10_Template","listaDisciplina","length"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\mostrar-stake\\mostrar-stake.component.ts","C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\mostrar-stake\\mostrar-stake.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Stake} from 'src/app/models/Stake';\nimport { ToastrService } from 'ngx-toastr';\nimport { StakesService } from 'src/app/services/stakes.service';\n\n\n@Component({\n  selector: 'app-mostrar-stake',\n  templateUrl: './mostrar-stake.component.html',\n  styleUrls: ['./mostrar-stake.component.css']\n})\nexport class MostrarStakeComponent {\n  listaStake : Stake[]=[];\n  constructor(private toastr: ToastrService,\n    private stakeService:StakesService){\n\n  }\n  ngOnInit(){\nthis.obtenerStakes();\n  }\n  obtenerStakes() {\n    this.stakeService.getStake().subscribe(\n      response => {\n        console.log(response);\n        const data = response.data;\n        if (Array.isArray(data)) {\n          this.listaStake = data;\n          for (const iterator of this.listaStake) {\n            \n          }\n        } else {\n          console.error('Los datos recibidos no son un array:', data);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n  eliminarStake(id: any) {\n    this.stakeService.eliminarStake(id).subscribe( response => {\n      console.log(response);\n        const data = response.data;\n      console.log('El producto fue eliminado con exito');\n        this.toastr.error('El producto fue eliminado con exito' ,'Producto Eliminado');\n        this.obtenerStakes();\n      \n    }, error => {\n      console.log(error);\n    })\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <span class=\"titulo\">LISTADO DE PARTICIPACIONES</span>\n                    <button class=\"btn btn-success float-end\" routerLink=\"/saveStake\">NUEVO</button>\n                    <table *ngIf=\"listaDisciplina.length > 0\" class=\"table table-striped mt-3\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">Id</th>\n                            <th scope=\"col\">position</th>\n                            <th scope=\"col\">competitor</th>\n                            <th scope=\"col\">event</th>\n                            <th scope=\"col\">Acciones</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let stake of listaStake\">\n                            <td>{{ stake.id }}</td>\n                            <td>{{ stake.position}}</td>\n                            <td>{{ stake.competitor }}</td>\n                            <td>{{ stake.event }}</td>\n                            <td>\n                                <i [routerLink]=\"['/updateStake', stake.id]\" class=\"fas fa-edit text-primary\"></i>\n                                <i (click)=\"eliminarStake(stake.id)\" class=\"fas fa-trash text-danger\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                      <h5 style=\"text-align: start; margin-top: 10px;\" *ngIf=\"listaStake.length == 0\">No hay Participaciones para mostrar</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}