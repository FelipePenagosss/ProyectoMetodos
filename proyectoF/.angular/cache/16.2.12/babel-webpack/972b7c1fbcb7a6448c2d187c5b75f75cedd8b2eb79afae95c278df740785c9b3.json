{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass StakesService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:2500/stake/';\n  }\n  getStake() {\n    return this.http.get(this.url);\n  }\n  eliminarStake(id) {\n    return this.http.delete(this.url + id);\n  }\n  saveStake(stake, idC, idE) {\n    return this.http.post(this.url + idC + '/' + idE, stake);\n  }\n  getStakeById(id) {\n    return this.http.get(this.url + id);\n  }\n  update(id, stake) {\n    return this.http.put(this.url + id, stake);\n  }\n  static #_ = this.ɵfac = function StakesService_Factory(t) {\n    return new (t || StakesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StakesService,\n    factory: StakesService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { StakesService };","map":{"version":3,"names":["StakesService","constructor","http","url","getStake","get","eliminarStake","id","delete","saveStake","stake","idC","idE","post","getStakeById","update","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\services\\stakes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Stake} from 'src/app/models/Stake';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StakesService {\n  private url='http://localhost:2500/stake/'\n\n  constructor(private http:HttpClient) { }\n\n  getStake():Observable<any>{\n    return this.http.get(this.url);\n}\neliminarStake(id: string): Observable<any> {\n  return this.http.delete(this.url + id);\n}\n\nsaveStake(stake:Stake,idC:String,idE:String): Observable<any> {\n  return this.http.post(this.url+idC+'/'+idE, stake);\n}\n\ngetStakeById(id: string): Observable<any> {\n  return this.http.get(this.url + id);\n}\nupdate(id:string,stake:Stake):Observable<any>{\n  return this.http.put(this.url+id,stake);\n}\n}\n"],"mappings":";;AAKA,MAGaA,aAAa;EAGxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAC,8BAA8B;EAEH;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,CAAC;EAClC;EACAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,IAAI,CAACL,GAAG,GAAGI,EAAE,CAAC;EACxC;EAEAE,SAASA,CAACC,KAAW,EAACC,GAAU,EAACC,GAAU;IACzC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,GAACQ,GAAG,GAAC,GAAG,GAACC,GAAG,EAAEF,KAAK,CAAC;EACpD;EAEAI,YAAYA,CAACP,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAGI,EAAE,CAAC;EACrC;EACAQ,MAAMA,CAACR,EAAS,EAACG,KAAW;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAAC,IAAI,CAACb,GAAG,GAACI,EAAE,EAACG,KAAK,CAAC;EACzC;EAAC,QAAAO,CAAA,G;qBArBYjB,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbtB,aAAa;IAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;IAAAC,UAAA,EAFZ;EAAM;;SAEPzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}