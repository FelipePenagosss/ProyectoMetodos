{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EventService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:2500/event/';\n  }\n  getEvent() {\n    return this.http.get(this.url);\n  }\n  eliminarEvent(id) {\n    return this.http.delete(this.url + id);\n  }\n  saveEvent(event) {\n    return this.http.post(this.url, event);\n  }\n  getEventById(id) {\n    return this.http.get(this.url + id);\n  }\n  update(id, event) {\n    return this.http.put(this.url + id, event);\n  }\n  static #_ = this.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { EventService };","map":{"version":3,"names":["EventService","constructor","http","url","getEvent","get","eliminarEvent","id","delete","saveEvent","event","post","getEventById","update","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem6\\Metodos\\proyecto\\ProyectoMetodos\\proyectoF\\src\\app\\services\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Event } from 'src/app/models/Event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private url='http://localhost:2500/event/'\n\n  constructor(private http:HttpClient) { }\n\n  getEvent():Observable<any>{\n    return this.http.get(this.url);\n}\neliminarEvent(id: string): Observable<any> {\n  return this.http.delete(this.url + id);\n}\n\nsaveEvent(event:Event): Observable<any> {\n  return this.http.post(this.url, event);\n}\n\ngetEventById(id: string): Observable<any> {\n  return this.http.get(this.url + id);\n}\nupdate(id:string,event:Event):Observable<any>{\n  return this.http.put(this.url+id,event);\n}\n}\n"],"mappings":";;AAKA,MAGaA,YAAY;EAGvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAC,8BAA8B;EAEH;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,CAAC;EAClC;EACAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,IAAI,CAACL,GAAG,GAAGI,EAAE,CAAC;EACxC;EAEAE,SAASA,CAACC,KAAW;IACnB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,GAAG,EAAEO,KAAK,CAAC;EACxC;EAEAE,YAAYA,CAACL,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAGI,EAAE,CAAC;EACrC;EACAM,MAAMA,CAACN,EAAS,EAACG,KAAW;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACY,GAAG,CAAC,IAAI,CAACX,GAAG,GAACI,EAAE,EAACG,KAAK,CAAC;EACzC;EAAC,QAAAK,CAAA,G;qBArBYf,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZpB,YAAY;IAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPvB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}