{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearCompetidorComponent = class CrearCompetidorComponent {\n  constructor(fb, router, toastr, competitorService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.competitorService = competitorService;\n    this.aRouter = aRouter;\n    this.titulo = 'Crear Competidor';\n    this.disciplineForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      group: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const disciplina = {\n      id: this.disciplineForm.get('id')?.value,\n      name: this.disciplineForm.get('name')?.value,\n      description: this.disciplineForm.get('description')?.value,\n      group: this.disciplineForm.get('group')?.value,\n      competitors: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarDisciplina(disciplina);\n    } else {\n      // Modo de creación\n      this.guardarDisciplina(disciplina);\n    }\n  }\n  guardarDisciplina(disciplina) {\n    this.disciplinaService.saveDiscipline(disciplina).subscribe(data => {\n      this.toastr.success('El producto fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarDiscipline']);\n    }, error => {\n      console.log(error);\n      this.disciplineForm.reset();\n    });\n  }\n  actualizarDisciplina(disciplina) {\n    this.disciplinaService.update(this.id, disciplina).subscribe(response => {\n      console.log(response);\n      this.toastr.success('La disciplina fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarDiscipline']);\n    }, error => {\n      console.log(error);\n      this.disciplineForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar disciplina';\n      this.disciplinaService.getDisciplineById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.disciplineForm.setValue({\n          id: data.id,\n          name: data.name,\n          description: data.description,\n          group: data.group\n        });\n        this.disciplineForm.get('id')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n};\nCrearCompetidorComponent = __decorate([Component({\n  selector: 'app-crear-competidor',\n  templateUrl: './crear-competidor.component.html',\n  styleUrls: ['./crear-competidor.component.css']\n})], CrearCompetidorComponent);\nexport { CrearCompetidorComponent };","map":{"version":3,"names":["Component","Validators","CrearCompetidorComponent","constructor","fb","router","toastr","competitorService","aRouter","titulo","disciplineForm","group","id","required","name","description","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","disciplina","value","competitors","actualizarDisciplina","guardarDisciplina","disciplinaService","saveDiscipline","subscribe","data","success","navigate","error","console","log","reset","update","response","getDisciplineById","setValue","disable","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-competidor\\crear-competidor.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Competitor} from 'src/app/models/Competitor';\nimport { CompetitorService } from 'src/app/services/competitor.service';\n\n@Component({\n  selector: 'app-crear-competidor',\n  templateUrl: './crear-competidor.component.html',\n  styleUrls: ['./crear-competidor.component.css']\n})\nexport class CrearCompetidorComponent {\n  competitorForm: FormGroup;\n  titulo = 'Crear Competidor';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private competitorService:DisciplinaService,\n              private aRouter: ActivatedRoute) { \n    this.disciplineForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      group: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const disciplina: Disciplina = {\n      id: this.disciplineForm.get('id')?.value,\n      name: this.disciplineForm.get('name')?.value,\n      description: this.disciplineForm.get('description')?.value,\n      group: this.disciplineForm.get('group')?.value,\n      competitors: []\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarDisciplina(disciplina);\n    } else {\n      // Modo de creación\n      this.guardarDisciplina(disciplina);\n    }\n  }\n  guardarDisciplina(disciplina: Disciplina) {\n    this.disciplinaService.saveDiscipline(disciplina).subscribe(\n      data => {\n        this.toastr.success('El producto fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarDiscipline']);\n      },\n      error => {\n        console.log(error);\n        this.disciplineForm.reset();\n      }\n    );\n  }\n  private actualizarDisciplina(disciplina: Disciplina) {\n    this.disciplinaService.update(this.id!, disciplina).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('La disciplina fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarDiscipline']);\n      },\n      error => {\n        console.log(error);\n        this.disciplineForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar disciplina';\n      \n      this.disciplinaService.getDisciplineById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.disciplineForm.setValue({\n            id:data.id,\n            name: data.name,\n            description: data.description,\n            group: data.group,\n          });\n          this.disciplineForm.get('id')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}