{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MostrardisciplinaComponent = class MostrardisciplinaComponent {\n  constructor(disciplinaService, toastr) {\n    this.disciplinaService = disciplinaService;\n    this.toastr = toastr;\n    this.listaDisciplina = [];\n  }\n  ngOnInit() {\n    this.obtenerDisciplinas();\n  }\n  obtenerDisciplinas() {\n    this.disciplinaService.getDiscipline().subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        this.listaDisciplina = data;\n        for (const iterator of this.listaDisciplina) {\n          console.log(iterator.name);\n        }\n      } else {\n        console.error('Los datos recibidos no son un array:', data);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  eliminarProducto(id) {\n    this.disciplinaService.eliminarDiscipline(id).subscribe(response => {\n      console.log(response);\n      const data = response.data;\n      console.log('El producto fue eliminado con exito');\n      this.toastr.error('El producto fue eliminado con exito', 'Producto Eliminado');\n      this.obtenerDisciplinas();\n    }, error => {\n      console.log(error);\n    });\n  }\n  obtenerIdsCompetidores(disciplina) {\n    if (disciplina.competitors && disciplina.competitors.length > 0) {\n      console.log(\"Tamño\" + disciplina.competitors.length);\n      console.log(\"Existo\" + disciplina.competitors.map(competitor => competitor.id).join(','));\n      return disciplina.competitors.map(competitor => competitor.id).join(',');\n    } else {\n      return 'Sin competidores';\n    }\n  }\n};\nMostrardisciplinaComponent = __decorate([Component({\n  selector: 'app-mostrardisciplina',\n  templateUrl: './mostrardisciplina.component.html',\n  styleUrls: ['./mostrardisciplina.component.css']\n})], MostrardisciplinaComponent);\nexport { MostrardisciplinaComponent };","map":{"version":3,"names":["Component","MostrardisciplinaComponent","constructor","disciplinaService","toastr","listaDisciplina","ngOnInit","obtenerDisciplinas","getDiscipline","subscribe","response","console","log","data","Array","isArray","iterator","name","error","eliminarProducto","id","eliminarDiscipline","obtenerIdsCompetidores","disciplina","competitors","length","map","competitor","join","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\mostrardisciplina\\mostrardisciplina.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Disciplina } from 'src/app/models/Disciplina';\nimport { ToastrService } from 'ngx-toastr';\nimport { DisciplinaService } from 'src/app/services/disciplina.service';\n\n@Component({\n  selector: 'app-mostrardisciplina',\n  templateUrl: './mostrardisciplina.component.html',\n  styleUrls: ['./mostrardisciplina.component.css']\n})\nexport class MostrardisciplinaComponent {\n  listaDisciplina : Disciplina[]=[];\n  constructor(private disciplinaService:DisciplinaService,\n    private toastr: ToastrService){\n\n  }\n  ngOnInit(){\nthis.obtenerDisciplinas();\n  }\n  obtenerDisciplinas() {\n    this.disciplinaService.getDiscipline().subscribe(\n      response => {\n        console.log(response);\n        const data = response.data;\n        if (Array.isArray(data)) {\n          this.listaDisciplina = data;\n          for (const iterator of this.listaDisciplina) {\n            console.log(iterator.name);\n          }\n        } else {\n          console.error('Los datos recibidos no son un array:', data);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n  eliminarProducto(id: any) {\n    this.disciplinaService.eliminarDiscipline(id).subscribe( response => {\n      console.log(response);\n        const data = response.data;\n      console.log('El producto fue eliminado con exito');\n        this.toastr.error('El producto fue eliminado con exito' ,'Producto Eliminado');\n        this.obtenerDisciplinas();\n      \n    }, error => {\n      console.log(error);\n    })\n  }\n  obtenerIdsCompetidores(disciplina: Disciplina): string {\n    if (disciplina.competitors && disciplina.competitors.length > 0) {\n      console.log(\"Tamño\"+disciplina.competitors.length)\n      console.log( \"Existo\"+disciplina.competitors.map(competitor => competitor.id).join(','))\n      return disciplina.competitors.map(competitor => competitor.id).join(',');\n    } else {\n      return 'Sin competidores';\n    }\n  }\n\n  \n}  "],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUzC,IAAaC,0BAA0B,GAAvC,MAAaA,0BAA0B;EAErCC,YAAoBC,iBAAmC,EAC7CC,MAAqB;IADX,KAAAD,iBAAiB,GAAjBA,iBAAiB;IAC3B,KAAAC,MAAM,GAANA,MAAM;IAFhB,KAAAC,eAAe,GAAgB,EAAE;EAIjC;EACAC,QAAQA,CAAA;IACV,IAAI,CAACC,kBAAkB,EAAE;EACvB;EACAA,kBAAkBA,CAAA;IAChB,IAAI,CAACJ,iBAAiB,CAACK,aAAa,EAAE,CAACC,SAAS,CAC9CC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC1B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvB,IAAI,CAACR,eAAe,GAAGQ,IAAI;QAC3B,KAAK,MAAMG,QAAQ,IAAI,IAAI,CAACX,eAAe,EAAE;UAC3CM,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACC,IAAI,CAAC;;OAE7B,MAAM;QACLN,OAAO,CAACO,KAAK,CAAC,sCAAsC,EAAEL,IAAI,CAAC;;IAE/D,CAAC,EACDK,KAAK,IAAG;MACNP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EACAC,gBAAgBA,CAACC,EAAO;IACtB,IAAI,CAACjB,iBAAiB,CAACkB,kBAAkB,CAACD,EAAE,CAAC,CAACX,SAAS,CAAEC,QAAQ,IAAG;MAClEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACnB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC5BF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAChD,IAAI,CAACR,MAAM,CAACc,KAAK,CAAC,qCAAqC,EAAE,oBAAoB,CAAC;MAC9E,IAAI,CAACX,kBAAkB,EAAE;IAE7B,CAAC,EAAEW,KAAK,IAAG;MACTP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EACAI,sBAAsBA,CAACC,UAAsB;IAC3C,IAAIA,UAAU,CAACC,WAAW,IAAID,UAAU,CAACC,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;MAC/Dd,OAAO,CAACC,GAAG,CAAC,OAAO,GAACW,UAAU,CAACC,WAAW,CAACC,MAAM,CAAC;MAClDd,OAAO,CAACC,GAAG,CAAE,QAAQ,GAACW,UAAU,CAACC,WAAW,CAACE,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACP,EAAE,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC,CAAC;MACxF,OAAOL,UAAU,CAACC,WAAW,CAACE,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACP,EAAE,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC;KACzE,MAAM;MACL,OAAO,kBAAkB;;EAE7B;CAGD;AAnDY3B,0BAA0B,GAAA4B,UAAA,EALtC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACW/B,0BAA0B,CAmDtC;SAnDYA,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}