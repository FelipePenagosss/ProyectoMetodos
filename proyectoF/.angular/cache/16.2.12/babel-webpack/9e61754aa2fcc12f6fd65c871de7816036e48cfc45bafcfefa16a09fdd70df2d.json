{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearCompetidorComponent = class CrearCompetidorComponent {\n  constructor(fb, router, toastr, competitorService, aRouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this.competitorService = competitorService;\n    this.aRouter = aRouter;\n    this.titulo = 'Crear Competidor';\n    this.competitorForm = this.fb.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required]\n    });\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline: this.competitorForm.get('discipline')?.value,\n      stakes: []\n    };\n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor);\n    }\n  }\n  guardarCompetitor(competitor, id) {\n    this.competitorService.saveCompetitor(competitor, id).subscribe(data => {\n      this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  actualizarCompetitor(competitor) {\n    this.competitorService.update(this.id, competitor).subscribe(response => {\n      console.log(response);\n      this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n      this.router.navigate(['/mostrarCompetitor']);\n    }, error => {\n      console.log(error);\n      this.competitorForm.reset();\n    });\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      this.competitorService.getCompetitorById(this.id).subscribe(response => {\n        console.log(response);\n        const data = response.data;\n        console.log(data);\n        this.competitorForm.setValue({\n          id: data.id,\n          name: data.name,\n          surName: data.surName,\n          birthdate: data.birthdate,\n          discipline: data.discipline\n        });\n        this.competitorForm.get('id')?.disable();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n};\nCrearCompetidorComponent = __decorate([Component({\n  selector: 'app-crear-competidor',\n  templateUrl: './crear-competidor.component.html',\n  styleUrls: ['./crear-competidor.component.css']\n})], CrearCompetidorComponent);\nexport { CrearCompetidorComponent };","map":{"version":3,"names":["Component","Validators","CrearCompetidorComponent","constructor","fb","router","toastr","competitorService","aRouter","titulo","competitorForm","group","id","required","name","surName","birthdate","discipline","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","competitor","value","stakes","actualizarCompetitor","guardarCompetitor","saveCompetitor","subscribe","data","success","navigate","error","console","log","reset","update","response","getCompetitorById","setValue","disable","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nenit\\Documents\\universidad\\Sem5\\Electiva2\\Angular\\proyectoF\\src\\app\\components\\crear-competidor\\crear-competidor.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Competitor} from 'src/app/models/Competitor';\nimport { CompetitorService } from 'src/app/services/competitor.service';\n\n@Component({\n  selector: 'app-crear-competidor',\n  templateUrl: './crear-competidor.component.html',\n  styleUrls: ['./crear-competidor.component.css']\n})\nexport class CrearCompetidorComponent {\n  competitorForm: FormGroup;\n  titulo = 'Crear Competidor';\n  id: string | null;\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private toastr: ToastrService,\n              private competitorService:CompetitorService,\n              private aRouter: ActivatedRoute) { \n    this.competitorForm = this.fb.group({\n      id:['',Validators.required],\n      name: ['', Validators.required],\n      surName: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      discipline: ['', Validators.required],\n    })\n    this.id = this.aRouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const competitor:Competitor = {\n      id: this.competitorForm.get('id')?.value,\n      name: this.competitorForm.get('name')?.value,\n      surName: this.competitorForm.get('surName')?.value,\n      birthdate: this.competitorForm.get('birthdate')?.value,\n      discipline:this.competitorForm.get('discipline')?.value,\n     stakes:[]\n    };\n  \n    if (this.id !== null) {\n      // Modo de edición\n      this.actualizarCompetitor(competitor);\n    } else {\n      // Modo de creación\n      this.guardarCompetitor(competitor,);\n    }\n  }\n  guardarCompetitor(competitor: Competitor,id:String) {\n    this.competitorService.saveCompetitor(competitor,id).subscribe(\n      data => {\n        this.toastr.success('El Competidor fue registrado con éxito!', 'Producto Registrado!');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  private actualizarCompetitor(competitor: Competitor) {\n    this.competitorService.update(this.id!, competitor).subscribe(\n      response => {\n        console.log(response);\n        this.toastr.success('El competidor fue actualizada con éxito!', 'Disciplina Actualizada');\n        this.router.navigate(['/mostrarCompetitor']);\n      },\n      error => {\n        console.log(error);\n        this.competitorForm.reset();\n      }\n    );\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = 'Editar Competidor';\n      \n      this.competitorService.getCompetitorById(this.id).subscribe(\n        response => {\n          console.log(response);\n          const data = response.data;\n          console.log(data)\n          this.competitorForm.setValue({\n            id:data.id,\n            name: data.name,\n            surName: data.surName,\n            birthdate:data.birthdate,\n            discipline:data.discipline\n          });\n          this.competitorForm.get('id')?.disable();\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}